const Web3 = require('web3')
const fs = require('fs')
const path = require('path')
const provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545')
let web3 = new Web3(provider)

const { log } = console
const ABI = JSON.parse(
  fs.readFileSync(path.join(__dirname, 'DAIBI.abi').toString())
)

// js主动部署合约
// let MyContract = new web3.eth.Contract(ABI); //创建合约对象
// let data = "0x608060405234801561001057600080fd5b506127106000803273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506104a3806100656000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806390b98a111461003b578063f8b2cb4f1461006b575b600080fd5b610055600480360381019061005091906102e7565b61009b565b6040516100629190610342565b60405180910390f35b6100856004803603810190610080919061035d565b610206565b6040516100929190610399565b60405180910390f35b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156100ec5760009050610200565b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461013a91906103e3565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461018f9190610417565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516101f39190610399565b60405180910390a3600190505b92915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027e82610253565b9050919050565b61028e81610273565b811461029957600080fd5b50565b6000813590506102ab81610285565b92915050565b6000819050919050565b6102c4816102b1565b81146102cf57600080fd5b50565b6000813590506102e1816102bb565b92915050565b600080604083850312156102fe576102fd61024e565b5b600061030c8582860161029c565b925050602061031d858286016102d2565b9150509250929050565b60008115159050919050565b61033c81610327565b82525050565b60006020820190506103576000830184610333565b92915050565b6000602082840312156103735761037261024e565b5b60006103818482850161029c565b91505092915050565b610393816102b1565b82525050565b60006020820190506103ae600083018461038a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103ee826102b1565b91506103f9836102b1565b92508282101561040c5761040b6103b4565b5b828203905092915050565b6000610422826102b1565b915061042d836102b1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610462576104616103b4565b5b82820190509291505056fea2646970667358221220ecd54a9ecbd895b15f29096dde72d67df5b522d69eea5dbd732a8a34e33424b364736f6c63430008090033"

// MyContract
//   .deploy({
//     data: data,
//   })
//   .send(
//     {
//       from: '0xE8e555DdCd9687Bb31983719D396Fd19891915dB',
//       gas: 1500000,
//       gasPrice: '120854239', //这个数据有点问题 
//     },
//     function (err, result) {
//       log(err)
//       log(result)
//     }
//   )

// js部署完毕后的合约查看
let ContractAddress = "0xf3A0BFDe3352a94Ae76c5139Aad7Ab4E631D8daA"
let MyContract = new web3.eth.Contract(ABI,ContractAddress)
// log(MyContract.options.address) //合约的地址信息

MyContract.methods.getBalance("0x1477F7232e2238c5875467705f1862FeA8ed520c").call((err,result)=>{
  log(err)
  log(result)
})
