const Web3 = require('web3')
const fs = require('fs')
const path = require('path')
const provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545')
let web3 = new Web3(provider)

const { log } = console
const VotingABI = JSON.parse(
  fs.readFileSync(path.join(__dirname, 'Voting.abi').toString())
)

// 第一步js主动部署合约
// let MyContract = new web3.eth.Contract(VotingABI); //创建合约对象
// const data = "0x60806040523480156200001157600080fd5b50604051620007d9380380620007d983398181016040528101906200003791906200028c565b80600190805190602001906200004f92919062000057565b5050620002dd565b82805482825590600052602060002090810192821562000096579160200282015b828111156200009557825182559160200191906001019062000078565b5b509050620000a59190620000a9565b5090565b5b80821115620000c4576000816000905550600101620000aa565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012c82620000e1565b810181811067ffffffffffffffff821117156200014e576200014d620000f2565b5b80604052505050565b600062000163620000c8565b905062000171828262000121565b919050565b600067ffffffffffffffff821115620001945762000193620000f2565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b620001bf81620001aa565b8114620001cb57600080fd5b50565b600081519050620001df81620001b4565b92915050565b6000620001fc620001f68462000176565b62000157565b90508083825260208201905060208402830185811115620002225762000221620001a5565b5b835b818110156200024f57806200023a8882620001ce565b84526020840193505060208101905062000224565b5050509392505050565b600082601f830112620002715762000270620000dc565b5b815162000283848260208601620001e5565b91505092915050565b600060208284031215620002a557620002a4620000d2565b5b600082015167ffffffffffffffff811115620002c657620002c5620000d7565b5b620002d48482850162000259565b91505092915050565b6104ec80620002ed6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632f265cf71461005c578063392e66781461008c5780637021939f146100bc578063b13c744b146100ec578063cc9ab2671461011c575b600080fd5b610076600480360381019061007191906102b1565b610138565b60405161008391906102fa565b60405180910390f35b6100a660048036038101906100a191906102b1565b610173565b6040516100b39190610330565b60405180910390f35b6100d660048036038101906100d191906102b1565b6101d6565b6040516100e391906102fa565b60405180910390f35b61010660048036038101906101019190610381565b6101f6565b60405161011391906103bd565b60405180910390f35b610136600480360381019061013191906102b1565b61021a565b005b600061014382610173565b61014c57600080fd5b60008083815260200190815260200160002060009054906101000a900460ff169050919050565b600080600090505b6001805490508110156101cb57826001828154811061019d5761019c6103d8565b5b906000526020600020015414156101b85760019150506101d1565b80806101c390610436565b91505061017b565b50600090505b919050565b60006020528060005260406000206000915054906101000a900460ff1681565b6001818154811061020657600080fd5b906000526020600020016000915090505481565b61022381610173565b61022c57600080fd5b600160008083815260200190815260200160002060008282829054906101000a900460ff1661025b919061047f565b92506101000a81548160ff021916908360ff16021790555050565b600080fd5b6000819050919050565b61028e8161027b565b811461029957600080fd5b50565b6000813590506102ab81610285565b92915050565b6000602082840312156102c7576102c6610276565b5b60006102d58482850161029c565b91505092915050565b600060ff82169050919050565b6102f4816102de565b82525050565b600060208201905061030f60008301846102eb565b92915050565b60008115159050919050565b61032a81610315565b82525050565b60006020820190506103456000830184610321565b92915050565b6000819050919050565b61035e8161034b565b811461036957600080fd5b50565b60008135905061037b81610355565b92915050565b60006020828403121561039757610396610276565b5b60006103a58482850161036c565b91505092915050565b6103b78161027b565b82525050565b60006020820190506103d260008301846103ae565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104418261034b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561047457610473610407565b5b600182019050919050565b600061048a826102de565b9150610495836102de565b92508260ff038211156104ab576104aa610407565b5b82820190509291505056fea26469706673582212201ccd47e2221932d597d7df23c25cf845c20ed6cf4fb795758ddc481c60da019064736f6c63430008090033"
const candidateNames = ['0x57616b616b61', '0x4c697567657a686f75', '0x546f6d']
// MyContract
//   .deploy({
//     data: data,
//     arguments: [candidateNames]
//   })
//   .send(
//     {
//       from: '0x7Bc9720f5A386366e620ad44817e09b6E959e234',
//       gas: 1500000,
//       gasPrice: '93836513', //这个数据有点问题
//     },
//     function (err, result) {
//       log(err)
//       log(result)
//     }
//   )

// 第二步检查合约是否部署成功
let ContractAddress = '0x98EDFB81Da5616551f96DbDCB29B68F2bC527D5D'
let MyContract = new web3.eth.Contract(VotingABI, ContractAddress)

MyContract.methods.candidateList(1).call((err,result)=>{
  log(err)
  log(result)
})